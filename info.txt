# MeetingIntelligenceGenAI


The backend is designed to handle two main tasks:

Transcribing an Audio File: Convert audio files into text using the Whisper model (via OpenAI's API).
Handling Questions on the Transcription: Store the transcription and allow users to ask questions based on the stored transcription, leveraging Pinecone for vector storage and LangChain for generating answers.

Running locally frontend:
(.venv-llm) varshahindupur@Varshas-MacBook-Air MeetingIntelligenceGenAI % streamlit run frontend/src/app.py 


Running locally backend:
(base) varshahindupur@Varshas-MacBook-Air backend % uvicorn routespath:app --reload

uvicorn trail_openai:app --reload

Commands:
pip3.12 freeze > requirements.txt 
Successfully installed openai-0.28.0
pip3.12 install openai==0.28.0
pip3.12 install -U langchain-openai
pip3.12 install --upgrade openai
pip3.12 install whisper-openai
pip3.12 install python-dotenv
pip3.12 install python-multipart
pip3.12 install boto3
pip3.12 install pymongo

conda deactivate
source .venv_llm/bin/activate


frontend: env
BACKEND_URL="http://127.0.0.1:8000"

backend: env
OPENAI_API_KEY=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
PINECONE_API_KEY=900e35e4-d1fa-48a9-9e0c-dffbe7937746
PINECONE_ENVIRONMENT=us-east-1
PINECONE_INDEX_NAME=audio-index
MONGO_USER=varshahindupur
MONGO_PASSWORD=ZNuy3Rbb2Z5pcQ6U
MONGO_URI=mongodb+srv://varshahindupur:ZNuy3Rbb2Z5pcQ6U@cluster0.nvwwa.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
cd backend


Created Pinecone index usign backend/pineconde_create.py 